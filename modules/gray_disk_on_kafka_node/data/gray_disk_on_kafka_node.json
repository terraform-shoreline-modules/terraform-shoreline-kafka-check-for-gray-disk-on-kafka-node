{
  "name": "gray_disk_on_kafka_node",
  "description": "This incident type refers to the need to check for gray disks on a Kafka node. A gray disk is a disk that has failed or is failing, and it can cause data loss or interruption in the Kafka cluster. This check is important to ensure that the Kafka cluster is running smoothly and that data is being properly replicated across all nodes.",
  "params": [
    {
      "name": "ZOOKEEPER_HOST",
      "value": ""
    },
    {
      "name": "TOPIC_NAME",
      "value": ""
    },
    {
      "name": "DISK_NAME",
      "value": ""
    },
    {
      "name": "PATH_TO_GRAY_DISK",
      "value": ""
    },
    {
      "name": "PATH_TO_NEW_DISK",
      "value": ""
    },
    {
      "name": "HOST_NAME",
      "value": ""
    },
    {
      "name": "K8S_CLUSTER_NAME",
      "value": ""
    },
    {
      "name": "NAMESPACE",
      "value": ""
    }
  ],
  "cells": [
    {
      "name": "cell_1",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Gray Disk on Kafka Node.\nThis incident type refers to the need to check for gray disks on a Kafka node. A gray disk is a disk that has failed or is failing, and it can cause data loss or interruption in the Kafka cluster. This check is important to ensure that the Kafka cluster is running smoothly and that data is being properly replicated across all nodes."
    },
    {
      "name": "cell_2",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if any disk is at critical threshold"
    },
    {
      "name": "cell_3",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `df -h`"
    },
    {
      "name": "cell_4",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if there are any disk errors"
    },
    {
      "name": "cell_5",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `dmesg | grep -i error`"
    },
    {
      "name": "cell_6",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if there are any disk failures"
    },
    {
      "name": "cell_7",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `sudo smartctl -a /dev/${DISK_NAME}`"
    },
    {
      "name": "cell_8",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check if there are any Kafka log errors"
    },
    {
      "name": "cell_9",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `grep -i \"error\" /var/log/kafka/server.log`"
    },
    {
      "name": "cell_10",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the replication status of topics"
    },
    {
      "name": "cell_11",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `kafka-topics.sh --describe --zookeeper ${ZOOKEEPER_HOST}:2181 --topic ${TOPIC_NAME}`"
    },
    {
      "name": "cell_12",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the health of the Kafka cluster"
    },
    {
      "name": "cell_13",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `kafka-topics.sh --list --zookeeper ${ZOOKEEPER_HOST}:2181`"
    },
    {
      "name": "cell_14",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Replace the gray disk with a new one."
    },
    {
      "name": "cell_15",
      "type": "OP_LANG",
      "enabled": true,
      "content": "host | host_name=$HOST_NAME | invoke_copy_gray_disk_data($PATH_TO_GRAY_DISK, $PATH_TO_NEW_DISK)"
    }
  ]
}